diff --git a/web/pgadmin/static/js/helpers/Notifier.jsx b/web/pgadmin/static/js/helpers/Notifier.jsx
index 7d9d123a4..d436a6116 100644
--- a/web/pgadmin/static/js/helpers/Notifier.jsx
+++ b/web/pgadmin/static/js/helpers/Notifier.jsx
@@ -15,7 +15,7 @@ import { DefaultButton, PrimaryButton } from '../components/Buttons';
 import HTMLReactParser from 'html-react-parser';
 import CheckRoundedIcon from '@mui/icons-material/CheckRounded';
 import PropTypes from 'prop-types';
-import React, { useEffect } from 'react';
+import React from 'react';
 import { NotifierMessage, MESSAGE_TYPE } from '../components/FormComponents';
 import CustomPropTypes from '../custom_prop_types';
 import gettext from 'sources/gettext';
@@ -186,40 +186,22 @@ class Notifier {
 export function NotifierProvider({ pgAdmin, pgWindow, getInstance, children, onReady }) {
   const modal = useModal();
 
-  useEffect(()=>{
-    // if opened in an iframe then use top pgAdmin
-    // pgAdmin itself can open in iframe, skip this in that case.
-    if(window.self != window.top && pgWindow != window ) {
-      pgAdmin.Browser.notifier = new Notifier(modal, pgWindow.pgAdmin.Browser.notifier.snackbar);
-      onReady?.();
-      getInstance?.(pgAdmin.Browser.notifier);
-    }
-  }, []);
-
-  // if open in a window, then create your own Snackbar
-  // if pgAdmin is opened inside an iframe then it also same as new window.
-  if(window.self == window.top || (window.self != window.top && pgWindow == window )) {
-    return (
-      <Root>
-        <SnackbarProvider
-          maxSnack={30}
-          anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}
-          ref={(obj)=>{
-            pgAdmin.Browser.notifier = new Notifier(modal, new SnackbarNotifier(obj));
-            getInstance?.(pgAdmin.Browser.notifier);
-            onReady?.();
-          }}
-          disableWindowBlurListener={true}
-        >
-          {children}
-        </SnackbarProvider>
-      </Root>
-    );
+  if (pgWindow?.pgAdmin) {
+        pgWindow.pgAdmin.hass_modified = true;  
   }
+    
   return (
-    (<Root>
+  <SnackbarProvider
+    maxSnack={30}
+    anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}
+    ref={(obj)=>{
+      pgAdmin.Browser.notifier = new Notifier(modal, new SnackbarNotifier(obj));
+      getInstance?.(pgAdmin.Browser.notifier);
+      onReady?.();
+    }}
+  >
       {children}
-    </Root>)
+  </SnackbarProvider>
   );
 }
 
